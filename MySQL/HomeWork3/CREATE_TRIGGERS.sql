USE SMART_ELECTRONICS;

DROP TRIGGER IF EXISTS AFTER_PHONE_INSERT;
DROP TRIGGER IF EXISTS BEFORE_PHONE_DELETE;

DROP TRIGGER IF EXISTS AFTER_WATCH_INSERT;
DROP TRIGGER IF EXISTS BEFORE_WATCH_DELETE;


DROP TABLE IF EXISTS USERS_HISTORY;

CREATE TABLE USERS_HISTORY (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    `ACTION` VARCHAR(20) NOT NULL,
    ACTION_DATE TIMESTAMP NOT NULL,
    `NAME` VARCHAR(255) NOT NULL,
    LAUNCH_ANNOUNCED VARCHAR(255) NOT NULL,
    BODY_WEIGHT VARCHAR(255) NOT NULL,
    DISPLAY_SIZE VARCHAR(255) NOT NULL,
    DISPLAY_RESOLUTION VARCHAR(255) NOT NULL,
    PLATFORM_OS VARCHAR(255) NOT NULL,
    MEMORY_INTERNAL VARCHAR(255) NOT NULL,
    BRAND_ID INT NOT NULL
    );
    
CREATE TRIGGER AFTER_PHONE_INSERT 
AFTER INSERT ON PHONES
FOR EACH ROW INSERT INTO USERS_HISTORY
	SET `ACTION` = "INSERT",
    ACTION_DATE = NOW(),
    `NAME` = NEW.PHONE_NAME,
    LAUNCH_ANNOUNCED = NEW.LAUNCH_ANNOUNCED,
    BODY_WEIGHT = NEW.BODY_WEIGHT,
    DISPLAY_SIZE = NEW.DISPLAY_SIZE,
    DISPLAY_RESOLUTION = NEW.DISPLAY_RESOLUTION,
    PLATFORM_OS = NEW.PLATFORM_OS,
    MEMORY_INTERNAL = NEW.MEMORY_INTERNAL,
    BRAND_ID = NEW.BRAND_ID;
    
CREATE TRIGGER AFTER_WATCH_INSERT 
AFTER INSERT ON WATCHES
FOR EACH ROW INSERT INTO USERS_HISTORY
	SET `ACTION` = "INSERT",
    ACTION_DATE = NOW(),
    `NAME` = NEW.WATCH_NAME,
    LAUNCH_ANNOUNCED = NEW.LAUNCH_ANNOUNCED,
    BODY_WEIGHT = NEW.BODY_WEIGHT,
    DISPLAY_SIZE = NEW.DISPLAY_SIZE,
    DISPLAY_RESOLUTION = NEW.DISPLAY_RESOLUTION,
    PLATFORM_OS = NEW.PLATFORM_OS,
    MEMORY_INTERNAL = NEW.MEMORY_INTERNAL,
    BRAND_ID = NEW.BRAND_ID;
    
CREATE TRIGGER BEFORE_PHONE_DELETE 
BEFORE DELETE ON PHONES
FOR EACH ROW INSERT INTO USERS_HISTORY
	SET `ACTION` = "DELETE",
    ACTION_DATE = NOW(),
    `NAME` = OLD.PHONE_NAME,
    LAUNCH_ANNOUNCED = OLD.LAUNCH_ANNOUNCED,
    BODY_WEIGHT = OLD.BODY_WEIGHT,
    DISPLAY_SIZE = OLD.DISPLAY_SIZE,
    DISPLAY_RESOLUTION = OLD.DISPLAY_RESOLUTION,
    PLATFORM_OS = OLD.PLATFORM_OS,
    MEMORY_INTERNAL = OLD.MEMORY_INTERNAL,
    BRAND_ID = OLD.BRAND_ID;
    
CREATE TRIGGER BEFORE_WATCH_DELETE 
BEFORE DELETE ON WATCHES
FOR EACH ROW INSERT INTO USERS_HISTORY
	SET `ACTION` = "DELETE",
    ACTION_DATE = NOW(),
    `NAME` = OLD.WATCH_NAME,
    LAUNCH_ANNOUNCED = OLD.LAUNCH_ANNOUNCED,
    BODY_WEIGHT = OLD.BODY_WEIGHT,
    DISPLAY_SIZE = OLD.DISPLAY_SIZE,
    DISPLAY_RESOLUTION = OLD.DISPLAY_RESOLUTION,
    PLATFORM_OS = OLD.PLATFORM_OS,
    MEMORY_INTERNAL = OLD.MEMORY_INTERNAL,
    BRAND_ID = OLD.BRAND_ID;
    
CREATE TRIGGER BEFORE_PHONE_UPDATE
BEFORE UPDATE ON PHONES
FOR EACH ROW INSERT INTO USERS_HISTORY
	SET `ACTION` = "UPDATE",
    ACTION_DATE = NOW(),
    `NAME` = NEW.PHONE_NAME,
    LAUNCH_ANNOUNCED = NEW.LAUNCH_ANNOUNCED,
    BODY_WEIGHT = NEW.BODY_WEIGHT,
    DISPLAY_SIZE = NEW.DISPLAY_SIZE,
    DISPLAY_RESOLUTION = NEW.DISPLAY_RESOLUTION,
    PLATFORM_OS = NEW.PLATFORM_OS,
    MEMORY_INTERNAL = NEW.MEMORY_INTERNAL,
    BRAND_ID = NEW.BRAND_ID;
    
CREATE TRIGGER BEFORE_WATCH_UPDATE
BEFORE UPDATE ON WATCHES
FOR EACH ROW INSERT INTO USERS_HISTORY
	SET `ACTION` = "UPDATE",
    ACTION_DATE = NOW(),
    `NAME` = NEW.WATCH_NAME,
    LAUNCH_ANNOUNCED = NEW.LAUNCH_ANNOUNCED,
    BODY_WEIGHT = NEW.BODY_WEIGHT,
    DISPLAY_SIZE = NEW.DISPLAY_SIZE,
    DISPLAY_RESOLUTION = NEW.DISPLAY_RESOLUTION,
    PLATFORM_OS = NEW.PLATFORM_OS,
    MEMORY_INTERNAL = NEW.MEMORY_INTERNAL,
    BRAND_ID = NEW.BRAND_ID;
